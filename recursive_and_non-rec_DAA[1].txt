#include <stdio.h>
#include <time.h>
unsigned long long iterativeFactorial(int n) {
    unsigned long long result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}
unsigned long long recursiveFactorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * recursiveFactorial(n - 1);
    }
}
void measureTime(unsigned long long (*func)(int), int n) {
    clock_t start, end;
    double cpu_time_used;  
    start = clock();
    unsigned long long result = func(n);
    end = clock();    
    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
    printf("Result: %llu\n", result);
    printf("Time taken: %f seconds\n", cpu_time_used);
}
int main() {
    int n = 20;    
    printf("Analyzing time complexity for n = %d\n", n);   
    printf("\nIterative Factorial Function (Non-recursive):\n");
    measureTime(iterativeFactorial, n);    
    printf("\nRecursive Factorial Function:\n");
    measureTime(recursiveFactorial, n);    
    return 0;
}