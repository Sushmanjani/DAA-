#include <stdio.h>
void heapify(int arr[], int n, int i) {
    int largest = i;    
    int left = 2 * i + 1;   
    int right = 2 * i + 2;  
    if (left < n && arr[left] > arr[largest])
        largest = left;
    if (right < n && arr[right] > arr[largest])
        largest = right;
    if (largest != i) {
        int temp = arr[i];
        arr[i] = arr[largest];
        arr[largest] = temp;
        heapify(arr, n, largest);
    }
}
void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);
    for (int i = n - 1; i > 0; i--) {
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;
   heapify(arr, i, 0);
    }
}
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
int main() {
    int nums[] = {12, 11, 13, 5, 6, 7};
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    printf("Original array: \n");
    printArray(nums, numsSize);
    heapSort(nums, numsSize);
    printf("\nSorted array in ascending order: \n");
    printArray(nums, numsSize);
    return 0;
}