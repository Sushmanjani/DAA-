#include <stdio.h>
#include <time.h>
#include <math.h>
void constantTimeFunction(int n) {
    printf("This is O(1) complexity.\n");
}
void linearTimeFunction(int n) {
    for (int i = 0; i < n; i++) {
    }
    printf("This is O(n) complexity.\n");
}
void quadraticTimeFunction(int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
        }
    }
    printf("This is O(n^2) complexity.\n");
}
void logarithmicTimeFunction(int n) {
    for (int i = 1; i < n; i *= 2) {
    }
    printf("This is O(log n) complexity.\n");
}
void measureTime(void (*func)(int), int n) {
    clock_t start, end;
    double cpu_time_used;   
    start = clock();
    func(n);
    end = clock();   
    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;
    printf("Time taken: %f seconds\n", cpu_time_used);
}
int main() {
    int n = 1000;     
    printf("Analyzing time complexity for n = %d\n", n);    
    printf("\nConstant Time Function:\n");
    measureTime(constantTimeFunction, n);    
    printf("\nLinear Time Function:\n");
    measureTime(linearTimeFunction, n);   
    printf("\nQuadratic Time Function:\n");
    measureTime(quadraticTimeFunction, n);    
    printf("\nLogarithmic Time Function:\n");
    measureTime(logarithmicTimeFunction, n);    
    return 0;
}